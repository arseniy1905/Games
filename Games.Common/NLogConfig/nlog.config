<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  
  <!--https://github.com/NLog/NLog/wiki/Getting-started-with-ASP.NET-Core-2-->

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
    <add assembly="NLog.Targets.Stackify"/>
  </extensions>

  <variable name="logTextLayout" value="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

  <!-- the targets to write to -->
  <targets async="true">
    <!-- write logs to file  -->
    <target xsi:type="File" name="allfile" fileName="c:\temp\nlog-all-${shortdate}.log"
            layout="${var:logTextLayout}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-own-${shortdate}.log"
            layout="${var:logTextLayout}" />

    <!--https://github.com/NLog/NLog/wiki/Database-target-->
<!--
Script to create dbo.ExceptionLog table.
      
IF EXISTS (SELECT * FROM sys.all_objects WHERE object_id = OBJECT_ID(N'[dbo].[ExceptionLog]') AND type IN ('U'))
DROP TABLE [dbo].[ExceptionLog]
GO
CREATE TABLE [dbo].[ExceptionLog] (
  [Id] [int] IDENTITY(1,1) NOT NULL,
  [Source] [nvarchar](550) NOT NULL,
  [Url] [nvarchar](550),
  [Message] [nvarchar](max),
  [StackTrace] [nvarchar](max) NOT NULL,
  [LoggedDate] [datetime] NOT NULL,
CONSTRAINT [PK_dbo.ExceptionLog] PRIMARY KEY CLUSTERED ([Id] ASC)
  WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
-->
 
<!-- 
connectionString shown below does not work under current appSettings format for connectionString. 
connectionString is configured by SetConnectionStringMiddleware. 
-->

    <target xsi:type="Database"
              name="dbOCS"
              dbProvider="sqlserver"
              keepConnection="false"
              connectionString ="${configsetting:item=Services[0].Connection}" 
              commandType="Text"
              commandText="INSERT INTO dbo.ExceptionLog (Source, Url, Message, StackTrace, LoggedDate) VALUES (@Source, @Url, @Message, CASE WHEN @Exception='' THEN @StackTrace ELSE @Exception END, @LoggedDate)">
      
        <parameter name="@Source" layout="${callsite}" />
        <parameter name="@Url" layout="${aspnet-request-url}" />
        <parameter name="@Message" layout="${message}" />
        <parameter name="@Exception" layout="${exception:tostring" />
        <parameter name="@StackTrace" layout="${stacktrace:format=raw}}" />
        <parameter name="@LoggedDate" layout="${date}" />
    </target>

    <target xsi:type="StackifyTarget" name="stackify"/>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" enabled="false" />

    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" enabled="false" />
    <logger name="*" minlevel="Trace" writeTo="dbOCS" />
    <logger name="*" minlevel="Debug" writeTo="stackify" enabled="false" />
  </rules>
</nlog>